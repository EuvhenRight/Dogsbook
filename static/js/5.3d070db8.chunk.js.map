{"version":3,"sources":["components/general/Validations/Validations.js","components/general/FormsControl/FormsControl.js","components/general/FormsControl/FormControl.module.css","components/Login/LoginPage.module.css","components/Login/LoginPage.jsx"],"names":["__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","Textarea","_ref","input","meta","props","Object","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","classes","formControl","assign","Input","_ref2","createField","placeholder","name","component","validate","arguments","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","module","exports","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_LoginPage_module_css__WEBPACK_IMPORTED_MODULE_1__","_LoginPage_module_css__WEBPACK_IMPORTED_MODULE_1___default","redux_form__WEBPACK_IMPORTED_MODULE_2__","_general_FormsControl_FormsControl__WEBPACK_IMPORTED_MODULE_3__","_general_Validations_Validations__WEBPACK_IMPORTED_MODULE_4__","react_redux__WEBPACK_IMPORTED_MODULE_5__","_redux_auth_Reducer__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","connect","state","isAuth","auth","loginThunk","to","formData","email","password","rememberMe"],"mappings":"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","file":"static/js/5.3d070db8.chunk.js","sourcesContent":["export const required = (value) => {\n    if (value) return undefined;\n\n    return \"Field is required\"; // Якщо в нас в текстеріі не має даних пишимо помилку: \"Field is required\"\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength)\n        return `Max Length is ${maxLength} symbols`; // Якщо в нас в текстеріі багато символів пишем помилку:\n    //`Max Length is ${maxLength} symbols`;\n    return undefined;\n}","import React from \"react\";\nimport classes from \"./FormControl.module.css\"\nimport {Field} from \"redux-form\";\nimport {required} from \"../Validations/Validations\";\n\n\nexport const Textarea = ({input, meta, ...props}) => { // REST  оператор, беремо не всі пропси, а тільки ті які нам потрібні\n    const hasError = meta.touched && meta.error;  // Деструктурізація - якщо ти торкнувся або в інпуте помилка\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\n            <textarea {...input} {...props}/>\n            <div>\n                {/*Якщо в тебе будуть ошибкі при вводі */}\n                {hasError && <span>{meta.error}</span>}\n            </div>\n\n        </div>\n    )\n}\n\nexport const Input = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\n            <input {...input} {...props}/>\n            <div>\n                {hasError && <span>{meta.error}</span>}\n            </div>\n\n        </div>\n    )\n}\n\nexport const createField = (placeholder, name, component, validate, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               component={component}\n               validate={validate}\n               {...props}/> {text}\n    </div>\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__1lVtw\",\"error\":\"FormControl_error__1WuHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"LoginPage_error__1hCQL\"};","import React from 'react';\nimport classes from './LoginPage.module.css'\nimport {reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../general/FormsControl/FormsControl\";\nimport {required} from \"../general/Validations/Validations\";\nimport {connect} from \"react-redux\";\nimport {loginThunk} from \"../../redux/auth-Reducer\";\nimport {Navigate} from \"react-router-dom\";\n\n\nconst LoginForm = ({handleSubmit, error}) => {\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"email\", \"email\", Input, [required])}\n            {createField(\"password\", \"password\", Input, [required], {type: \"password\"})}\n            {createField(null, \"rememberMe\", Input, [], {type: \"checkbox\"},\n                \"remember me\")}\n            {error &&\n                <div className={classes.error}>\n                    {error}\n                </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n};\n\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm);\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.loginThunk(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Navigate to={\"/profile\"}/>;\n    }\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {loginThunk})(Login);"],"sourceRoot":""}