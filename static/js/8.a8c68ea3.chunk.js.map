{"version":3,"sources":["components/general/Validations/Validations.js","components/general/FormsControl/FormsControl.js","components/general/FormsControl/FormControl.module.css","components/Hoc/withAuhRedirect.js","components/Profile/My_post/MyPost.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My_post/Post/Post.module.css","components/Photo/ava1.jpg","components/Profile/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My_post/Post/Post.jsx","components/Profile/My_post/PostForm.jsx","components/Profile/My_post/MyPost.jsx","components/Profile/My_post/MyPostContainer.jsx","components/Profile/Profile.jsx","redux/profile-Selectors.js","components/Profile/ProfileContainer.jsx"],"names":["__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","Textarea","_ref","input","meta","props","Object","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","classes","formControl","assign","Input","_ref2","createField","placeholder","name","component","validate","arguments","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","to","React","connect","my_post","wall_post","avatar_info","profile_info","data_user","p","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","setActivateEditMode","_useState3","status","_useState4","setUpdateStatus","useEffect","react_default","onChange","e","currentTarget","autoFocus","onBlur","updateStatusThunk","onDoubleClick","ProfileInfo","profile","proclassName","src","photos","large","Profile_ProfileStatus","fullName","aboutMe","contacts","facebook","instagram","github","lookingForAJob","lookingForAJobDescription","Preloader","Post","Ava_p","alt","message","likesCount","maxLength10","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","MyPost","postsElement","posts","map","My_post_Post_Post","id","My_post_PostForm","values","addPost","addPostMessage","MyPostContainer","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","My_post_MyPostContainer","getProfile","getStatus","getAuthorizedUserId","getIsAuth","withRouter","Children","match","params","useParams","ProfileContainer","userId","authorizedUserId","usersProfileThunk","statusThunk","components_Profile_Profile","compose","setUsersProfile"],"mappings":"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","file":"static/js/8.a8c68ea3.chunk.js","sourcesContent":["export const required = (value) => {\n    if (value) return undefined;\n\n    return \"Field is required\"; // Якщо в нас в текстеріі не має даних пишимо помилку: \"Field is required\"\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength)\n        return `Max Length is ${maxLength} symbols`; // Якщо в нас в текстеріі багато символів пишем помилку:\n    //`Max Length is ${maxLength} symbols`;\n    return undefined;\n}","import React from \"react\";\nimport classes from \"./FormControl.module.css\"\nimport {Field} from \"redux-form\";\nimport {required} from \"../Validations/Validations\";\n\n\nexport const Textarea = ({input, meta, ...props}) => { // REST  оператор, беремо не всі пропси, а тільки ті які нам потрібні\n    const hasError = meta.touched && meta.error;  // Деструктурізація - якщо ти торкнувся або в інпуте помилка\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\n            <textarea {...input} {...props}/>\n            <div>\n                {/*Якщо в тебе будуть ошибкі при вводі */}\n                {hasError && <span>{meta.error}</span>}\n            </div>\n\n        </div>\n    )\n}\n\nexport const Input = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\n            <input {...input} {...props}/>\n            <div>\n                {hasError && <span>{meta.error}</span>}\n            </div>\n\n        </div>\n    )\n}\n\nexport const createField = (placeholder, name, component, validate, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               component={component}\n               validate={validate}\n               {...props}/> {text}\n    </div>\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__1lVtw\",\"error\":\"FormControl_error__1WuHp\"};","import {Navigate} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) =>({// змінна для того щоб витащити из стора цю строку\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => { // Хок на редирект, коли ти не за логінений тебе не пустить на страницю\n\n    class RedirectComponent extends React.Component {\n        render () {\n            if(!this.props.isAuth) return <Navigate to={\"/login\"} />;\n\n            return <Component {...this.props} /> // Повертає Копмоненту зі всіма пропсами\n        }\n    }\n\n    let connectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);//  робимо Коннект, спочатку\n    // щоб витащити дані зі стора: isAuth: state.auth.isAuth\n\n    return connectAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_post\":\"MyPost_my_post__3oA3d\",\"wall_post\":\"MyPost_wall_post__3LcFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar_info\":\"ProfileInfo_avatar_info__2P4lv\",\"profile_info\":\"ProfileInfo_profile_info__3tNIe\",\"data_user\":\"ProfileInfo_data_user__1kufR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall_post\":\"Post_wall_post__3Qmcy\"};","module.exports = __webpack_public_path__ + \"static/media/ava1.780e971f.jpg\";","import React, {useEffect, useState} from 'react';\n\n\n// class ProfileStatus extends React.Component {\n//     state = { // локальный стейт, чтобы не делать изменения на основном стейте, делает их в компоненте\n//         editMode: false\n//     };\n//\n//     activateEditMode() {\n//         debugger\n//         this.setState({ // Хук setState - ассихронный, обновляет локальный стейт\n//             editMode: true\n//         })\n//     }\n//\n//     deactivateEditMode() {\n//         this.setState({\n//             editMode: false\n//         })\n//     }\n//\n//     render() {\n//\n//         return (\n//             <div>\n//                 {!this.state.editMode &&\n//                     <div>\n//                         <span onDoubleClick={this.activateEditMode.bind(this)}>{this.props.status}</span>\n//                         {/* bind - Метод bind() создаёт новую функцию, которая при вызове устанавливает в\n//                         качестве контекста выполнения this предоставленное значение. В метод также передаётся\n//                         набор аргументов, которые будут установлены перед переданными в\n//                         привязанную функцию аргументами при её вызове.*/}\n//                     </div>\n//                 }\n//                 {this.state.editMode &&\n//                     <div>\n//                         <input autoFocus={true} onBlur={this.deactivateEditMode.bind(this)}\n//                                value={this.props.status}></input>\n//                     </div>     // autoFocus - убирает автофокус с данного елемента\n//                     // onBlur - убираешь наведение мишью и editMode становиться false,\n//                 }\n//             </div>\n//         )\n//     }\n// }\n\n\nconst ProfileStatus = (props) => {\n\n    let [editMode, setActivateEditMode] = useState(false);\n\n    let [status, setUpdateStatus] = useState(props.status);\n\n    useEffect(()=>{\n        setUpdateStatus(props.status)\n    }, [props.status]);\n\n\n    const activateMode = () => {\n        setActivateEditMode(true);\n    };\n\n    const deActivateMode = () => {\n        setActivateEditMode(false);\n        props.updateStatusThunk(status)\n\n    };\n    const updateStatus = (e) => {\n        setUpdateStatus(e.currentTarget.value)\n    };\n\n\n    return (\n            <div>\n                {!editMode ? (\n                    <div>\n                        <span\n                            onDoubleClick={activateMode}>{status === \"\" ? \"----\" : status}</span>\n                        {/* Зробив на хуке, треба тільки на обработчик кидати ффункцію, та добавляти булево значення */}\n                    </div>\n                ) : (<div>\n                        <input onChange={updateStatus}\n                               autoFocus={true}\n                               onBlur={deActivateMode}\n                               value={status}></input>\n                    </div>     // autoFocus - убирает автофокус с данного елемента\n                    // onBlur - убираешь наведение мишью и editMode становиться false,\n                )}\n            </div>\n    )\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport classes from '../ProfileInfo/ProfileInfo.module.css';\nimport Preloader from \"../../general/Preloader/Preloader\";\nimport ProfileStatus from \"../ProfileStatus\";\n\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div proclassName={classes.profile_info}>\n            <div>\n                <img src=\"https://funik.ru/wp-content/uploads/2018/11/a9e0d86d036b40f1ecdc-700x394.jpg\"/>\n            </div>\n            <div className={classes.avatar_info}>\n                <img src={props.profile.photos.large}/>\n                <ProfileStatus status={props.status} updateStatusThunk={props.updateStatusThunk}/>\n                <h3>{props.profile.fullName}</h3>\n                <div>About Me:\n                    <span>{props.profile.aboutMe}</span>\n                </div>\n                <div>Contacs:\n                    <div>{props.profile.contacts.facebook}</div>\n                    <div>{props.profile.contacts.instagram}</div>\n                    <div>{props.profile.contacts.github}</div>\n                </div>\n                <div>Work:\n                <div>{props.profile.lookingForAJob === false\n                    ? props.profile.lookingForAJob : props.profile.lookingForAJobDescription}</div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport classes from './Post.module.css';\nimport Ava_p from './../../../Photo/ava1.jpg'\n\n\n\nconst Post = (props) => {\n    return (\n        <div className={classes.wall_post}>\n            <img src={Ava_p} alt=\"\" />\n            {props.message}\n            <div>\n                <span >likes</span > {props.likesCount}\n            </div>\n        </div >\n    )\n}\n\nexport default Post;","import React from 'react';\nimport classes from './MyPost.module.css'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../general/FormsControl/FormsControl\";\nimport {maxLengthCreator, required} from \"../../general/Validations/Validations\";\n\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst PostForm = (props) => {\n\n    // let addEnterPost = (e) =>{\n    //     if(e.key === \"Enter\") {\n    //         props.handleSubmit()\n    //     }\n    // }\n\n    return (\n        <form onSubmit={ props.handleSubmit}>\n            <div className={classes.wall_post}>\n                <Field\n                    component={Textarea}\n                    name={\"addPostMessage\"}\n                    placeholder={\"enter message\"}\n                    validate={[required, maxLength10]}\n                    // onKeyPress={addEnterPost}\n                   />\n            </div>\n            <div className={classes.wall_post}>\n                <button>Add posts</button>\n            </div>\n        </form>\n    )\n};\n\nconst PostReduxForm = reduxForm(\n    {\n        form: \"newAddPost\"\n    }\n)(PostForm);\n\n\nexport default PostReduxForm;","import React from 'react';\nimport classes from './MyPost.module.css'\nimport Post from './Post/Post';\nimport PostReduxForm from \"./PostForm\";\n\n\nconst MyPost = (props) => {\n\n    let postsElement = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount} />)\n\n    // let newAddPost = createRef(); видалив реф, зараз цим займається PostForm\n\n    let onAddPost = (values) => {\n      props.addPost(values.addPostMessage)  // функція котра робить відправку повідомлень за стейта Редакс-Форм,\n        // addPostMessage - назва компонента  name={\"addPostMessage\"} в тексєріі в PostForm\n    };\n\n\n    // let addTextArea = () => {\n    //     let text = newAddPost.current.value;\n    //     props.updateNewPostText(text)\n    // };\n\n    return (\n        <div className={classes.my_post}>\n            <h2>My Posts</h2>\n            <PostReduxForm onSubmit={onAddPost}/>\n            {/*<div className={classes.wall_post}> переніс в форму PostReduxForm */}\n            {/*    <textarea*/}\n            {/*        onChange={addTextArea}*/}\n            {/*        ref={newAddPost}*/}\n            {/*        value={props.newPostText} />*/}\n            {/*</div>*/}\n            {/*<div className={classes.wall_post}>*/}\n            {/*    <button onClick={onAddPost}>Add posts</button>*/}\n            {/*</div>*/}\n            <div>\n                {postsElement}\n            </div>\n        </div >\n    )\n}\n\nexport default MyPost;","import React from 'react';\nimport {addPostActionCreator} from '../../../redux/profile-Reducer';\nimport MyPost from \"./MyPost\";\nimport {connect} from \"react-redux\";\n\n\n// const MyPostContainer = (props) => {\n//\n//     let state = props.store.getState();\n//\n//     let addPost = () => {\n//         props.store.dispatch(addPostActionCreator());\n//     };\n//\n//     let onAddTextArea = (text) => {\n//         let action = addTextAreaActionCreator(text);\n//         props.store.dispatch(action)\n//     };\n//\n//     return (<MyPost\n//         updateNewPostText={onAddTextArea}\n//         addPost={addPost}\n//         posts={state.profilePage.posts}\n//         newPostText={state.profilePage.newPostText}\n//     />)\n// }\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        // newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        // updateNewPostText: (text) => {\n        //     let action = addTextAreaActionCreator(text);\n        //     dispatch(action)\n        // },\n        addPost: (addPost) => {\n            dispatch(addPostActionCreator(addPost))\n        }\n\n    }\n}\n\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\n\nexport default MyPostContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport classes from './Profile.module.css';\nimport MyPostContainer from \"./My_post/MyPostContainer\";\n\n\nconst Profile = (props) => {\n\n    return (\n        <div className={classes.profile}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatusThunk={props.updateStatusThunk}/>\n            <MyPostContainer />\n            {/* в пропсах передаємо profile, status, updateStatusThunk*/}\n        </div>\n    )\n}\n\nexport default Profile;","\nexport const getProfile = (state) => {\n    return state.profilePage.profile\n};\n\nexport const getStatus = (state) => {\n    return state.profilePage.status\n};\n\nexport const getAuthorizedUserId = (state) => {\n    return state.auth.id\n};\n\nexport const getIsAuth = (state) => {\n  return state.auth.isAuth\n};\n","import React from 'react';\nimport Profile from './Profile';\nimport {\n    setUsersProfile,\n    statusThunk,\n    updateStatusThunk,\n    usersProfileThunk\n} from \"../../redux/profile-Reducer\";\nimport {connect} from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../Hoc/withAuhRedirect\";\nimport {compose} from \"redux\";\nimport {getAuthorizedUserId, getIsAuth, getProfile, getStatus} from \"../../redux/profile-Selectors\";\n\n\nexport function withRouter(Children) {\n    return (props) => {\n\n        const match = {params: useParams()};\n        return <Children {...props} match={match}/>\n    }\n}\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n\n        this.props.usersProfileThunk(userId);\n        this.props.statusThunk(userId);\n\n    }\n\n\n    render() {\n        // if(!this.props.isAuth) return <Navigate to={\"/login\"} />;\n\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatusThunk={this.props.updateStatusThunk}/>\n            </div>\n        )\n    }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer); // Хок на редирект, коли ти не за логінений тебе не пустить на сторінку\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        profile: getProfile(state),\n        status: getStatus(state),\n        authorizedUserId: getAuthorizedUserId(state), // стейт авторізаціі\n        isAuth: getIsAuth(state),\n    }\n};\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n//\n// export default connect(mapStateToProps, {\n//     setUsersProfile, usersProfileThunk},\n// )(WithUrlDataContainerComponent);\n\nexport default compose(// Супер функція компоновки с натівного Джава Скрипта, у кінці ставимо ProfileContainer,\n    // а спочатку всі обкладенки та Хокі\n    withAuthRedirect,\n    withRouter,\n    connect(mapStateToProps, {\n        setUsersProfile, usersProfileThunk, statusThunk, updateStatusThunk\n    }))(ProfileContainer);"],"sourceRoot":""}