{"version":3,"sources":["components/Hoc/withAuhRedirect.js","redux/profile-Selectors.js","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_macbook_Documents_JS_React_2_0_it_camasutra_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","to","React","connect","getProfile","profilePage","profile","getStatus","status","getAuthorizedUserId","id","getIsAuth","withRouter","Children","match","params","useParams","react_default","assign","ProfileContainer","userId","authorizedUserId","usersProfileThunk","statusThunk","refreshProfile","prevProps","prevState","snapshot","Profile","isOwner","updateStatusThunk","savePhotoThunk","safeProfileThunk","compose","setUsersProfile"],"mappings":"qMAIIA,EAA6B,SAACC,GAAD,MAAW,CACxCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAc,IAErCC,EAFqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAInC,OAAIR,KAAKS,MAAMjB,OAERkB,EAAAC,EAAAC,cAACjB,EAAcK,KAAKS,OAFGC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,eAJTlB,EAAA,CAEXmB,IAAMpB,WAWtC,OAHmCqB,YAAQ1B,EAAR0B,CAAoCpB,yJCjB9DqB,EAAa,SAAC1B,GACvB,OAAOA,EAAM2B,YAAYC,SAGhBC,EAAY,SAAC7B,GACtB,OAAOA,EAAM2B,YAAYG,QAGhBC,EAAsB,SAAC/B,GAChC,OAAOA,EAAME,KAAK8B,IAGTC,EAAY,SAACjC,GACxB,OAAOA,EAAME,KAAKD,QCGb,SAASiC,EAAWC,GACvB,OAAO,SAACjB,GAEJ,IAAMkB,EAAQ,CAACC,OAAQC,eACvB,OAAOC,EAAAnB,EAAAC,cAACc,EAAD5B,OAAAiC,OAAA,GAActB,EAAd,CAAqBkB,MAAOA,mDAIrCK,2LAGE,IAAIC,EAASjC,KAAKS,MAAMkB,MAAMC,OAAOK,OAChCA,IACDA,EAASjC,KAAKS,MAAMyB,kBAGxBlC,KAAKS,MAAM0B,kBAAkBF,GAC7BjC,KAAKS,MAAM2B,YAAYH,+CAMvBjC,KAAKqC,4DAGUC,EAAWC,EAAWC,GAEjCxC,KAAKS,MAAMkB,MAAMC,OAAOK,QAAUK,EAAUX,MAAMC,OAAOK,QAEzDjC,KAAKqC,kDAQT,OACIP,EAAAnB,EAAAC,cAAA,WACIkB,EAAAnB,EAAAC,cAAC6B,EAAA,EAAD3C,OAAAiC,OAAA,GAAa/B,KAAKS,MAAlB,CAAyBU,QAASnB,KAAKS,MAAMU,QACpCuB,SAAU1C,KAAKS,MAAMkB,MAAMC,OAAOK,OAClCZ,OAAQrB,KAAKS,MAAMY,OACnBsB,kBAAmB3C,KAAKS,MAAMkC,kBAC9BC,eAAgB5C,KAAKS,MAAMmC,eAC3BC,iBAAkB7C,KAAKS,MAAMoC,4BArCvB9B,IAAMpB,WA8DtBmD,sBAEXpD,IACA+B,EACAT,YApBkB,SAACzB,GAEnB,MAAO,CACH4B,QAASF,EAAW1B,GACpB8B,OAAQD,EAAU7B,GAClB2C,iBAAkBZ,EAAoB/B,GACtCC,OAAQgC,EAAUjC,KAcG,CACrBwD,oBAAiBZ,sBAAmBC,gBAAaO,sBAAmBC,mBAAgBC,uBAL7EC,CAMPd","file":"static/js/7.b3c5f0ac.chunk.js","sourcesContent":["import {Navigate} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) =>({// змінна для того щоб витащити из стора цю строку\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => { // Хок на редирект, коли ти не за логінений тебе не пустить на страницю\n\n    class RedirectComponent extends React.Component {\n        render () {\n            if(!this.props.isAuth) return <Navigate to={\"/login\"} />;\n\n            return <Component {...this.props} /> // Повертає Копмоненту зі всіма пропсами\n        }\n    }\n\n    let connectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);//  робимо Коннект, спочатку\n    // щоб витащити дані зі стора: isAuth: state.auth.isAuth\n\n    return connectAuthRedirectComponent;\n}","\nexport const getProfile = (state) => {\n    return state.profilePage.profile\n};\n\nexport const getStatus = (state) => {\n    return state.profilePage.status\n};\n\nexport const getAuthorizedUserId = (state) => {\n    return state.auth.id\n};\n\nexport const getIsAuth = (state) => {\n  return state.auth.isAuth\n};\n","import React from 'react';\nimport Profile from './Profile';\nimport {\n    safeProfileThunk,\n    savePhotoThunk,\n    setUsersProfile,\n    statusThunk,\n    updateStatusThunk,\n    usersProfileThunk\n} from \"../../redux/profile-Reducer\";\nimport {connect} from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../Hoc/withAuhRedirect\";\nimport {compose} from \"redux\";\nimport {getAuthorizedUserId, getIsAuth, getProfile, getStatus} from \"../../redux/profile-Selectors\";\n\n\nexport function withRouter(Children) {\n    return (props) => {\n\n        const match = {params: useParams()};\n        return <Children {...props} match={match}/>\n    }\n}\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() { //обновлялка профіля\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n        }\n\n        this.props.usersProfileThunk(userId);\n        this.props.statusThunk(userId);\n    }\n\n\n    componentDidMount() {\n\n        this.refreshProfile(); // перший раз обновляється профіль\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if (this.props.match.params.userId != prevProps.match.params.userId) { // коли приходять нові пропси, да вони не равни,\n            // компонента перемалюється\n            this.refreshProfile();\n        }\n    }\n\n\n    render() {\n        // if(!this.props.isAuth) return <Navigate to={\"/login\"} />;\n\n        return (\n            <div>\n                <Profile {...this.props} profile={this.props.profile}\n                         isOwner={!this.props.match.params.userId}\n                         status={this.props.status}\n                         updateStatusThunk={this.props.updateStatusThunk}\n                         savePhotoThunk={this.props.savePhotoThunk}\n                         safeProfileThunk={this.props.safeProfileThunk}/>\n            </div>\n        )\n    }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer); // Хок на редирект, коли ти не за логінений тебе не пустить на сторінку\n\n\nlet mapStateToProps = (state) => {\n\n    return {\n        profile: getProfile(state),\n        status: getStatus(state),\n        authorizedUserId: getAuthorizedUserId(state), // стейт авторізаціі\n        isAuth: getIsAuth(state),\n    }\n};\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n//\n// export default connect(mapStateToProps, {\n//     setUsersProfile, usersProfileThunk},\n// )(WithUrlDataContainerComponent);\n\nexport default compose(// Супер функція компоновки с натівного Джава Скрипта, у кінці ставимо ProfileContainer,\n    // а спочатку всі обкладенки та Хокі\n    withAuthRedirect,\n    withRouter,\n    connect(mapStateToProps, {\n        setUsersProfile, usersProfileThunk, statusThunk, updateStatusThunk, savePhotoThunk, safeProfileThunk\n    }))(ProfileContainer);\n"],"sourceRoot":""}