{"version":3,"sources":["components/general/Paginator/Paginator.module.css","components/Users/Users.module.css","components/general/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-Selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","selectedPages","numberPage","prev","next","avatar","Paginator","_ref","totalItemsCount","pageSize","currentPage","onChangedPage","_ref$positionSize","positionSize","pageCount","Math","ceil","pages","i","push","positionCount","_useState","useState","_useState2","Object","slicedToArray","positionNumber","setPositionNumber","leftPositionPageNumber","RightPositionPageNumber","react_default","a","createElement","className","classes","onClick","filter","p","map","key","User","user","isFetchingInProgress","unfollow","follow","users","react_router_dom","to","id","src","photos","small","users_photo","followed","disabled","some","name","status","Users","props","objectWithoutProperties","general_Paginator_Paginator","u","Users_User","getUsers","state","usersPage","getPageSize","getTotalItemsCount","getCurrentPage","getIsFetching","isFetching","getSetToggleFollowInProgress","setToggleFollowInProgress","getIsFetchingInProgress","UsersContainer","pageNumber","_this","setCurrentPage","setUsersThunkCreate","this","Fragment","Preloader","components_Users_Users","unFollow","React","Component","compose","connect"],"mappings":"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","file":"static/js/6.e7a72f04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPages\":\"Paginator_selectedPages__2xcXD\",\"numberPage\":\"Paginator_numberPage__YF2So\",\"prev\":\"Paginator_prev__2kE6x\",\"next\":\"Paginator_next__eMx8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__3Diqw\",\"selectedPages\":\"Users_selectedPages__3DLbb\",\"numberPage\":\"Users_numberPage__2fRWR\"};","import React, {useState} from 'react';\nimport classes from './Paginator.module.css';\n\n\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onChangedPage, positionSize = 20}) => {\n\n    let pageCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i);\n    }\n\n    let positionCount = Math.ceil(pageCount / positionSize);\n    let [positionNumber, setPositionNumber] = useState(1);\n    let leftPositionPageNumber = [positionNumber - 1] * positionSize + 1;\n    let RightPositionPageNumber = positionNumber * positionSize;\n\n    return <div className={classes.numberPage}>\n        {positionNumber > 0 &&\n            <button className={classes.prev} onClick={() => {\n                setPositionNumber(positionNumber - 1)\n            }}>previous</button>}\n        {pages.filter(p => p >= leftPositionPageNumber && p <= RightPositionPageNumber)\n            .map(p => {\n                return <span className={currentPage === p && classes.selectedPages}\n                             key={p}\n                             onClick={() => {\n                                 onChangedPage(p)\n                             }}>{p}</span>\n            })}\n        {positionCount > positionNumber &&\n            <button className={classes.next} onClick={() => {\n                setPositionNumber(positionNumber + 1)\n            }}>next</button>}\n    < / div>\n}\n\nexport default Paginator;\n\n","import React from 'react';\nimport classes from './Users.module.css';\nimport users_photo from '../../photos/users_photo.png';\nimport {NavLink} from \"react-router-dom\";\n\n\nlet User = ({user, isFetchingInProgress, unfollow, follow}) => {\n\n    return (\n            <div className={classes.users}>\n                <NavLink to={'/profile/' + user.id}>\n                    <img src={user.photos.small != null ? user.photos.small : users_photo}\n                         className={classes.avatar}/>\n                </NavLink>\n                <span>\n                    <div>\n                {user.followed ? <button disabled={isFetchingInProgress.some(id => id === user.id)}\n                                         onClick={() => {\n                                             unfollow(user.id)\n                                         }}>UnFollow</button> :\n                    <button disabled={isFetchingInProgress.some(id => id === user.id)}\n                            onClick={() => {\n                                follow(user.id)\n                            }}>Follow</button>}\n                    </div>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                    </span>\n            </div>)}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../general/Paginator/Paginator\";\nimport User from \"./User\";\n\n\nlet Users = ({totalItemsCount, pageSize, currentPage, onChangedPage, users, ...props}) => {\n\n    return <div>\n        <Paginator totalItemsCount={totalItemsCount}\n                   pageSize={pageSize}\n                   currentPage={currentPage}\n                   onChangedPage={onChangedPage}/>\n\n        <div>\n            {\n                users.map(u => <User\n                        key={u.id}\n                        user={u}\n                        isFetchingInProgress={props.isFetchingInProgress}\n                        follow={props.follow}\n                        unfollow={props.unfollow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;\n\n","\nexport const getUsers = (state) => {\n    return state.usersPage.users\n};\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n};\n\nexport const getTotalItemsCount = (state) => {\n    return state.usersPage.totalItemsCount\n};\n\nexport const getCurrentPage = (state) => {\n  return state.usersPage.currentPage\n};\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n};\n\nexport const getSetToggleFollowInProgress = (state) => {\n    return state.usersPage.setToggleFollowInProgress\n};\n\nexport const getIsFetchingInProgress = (state) => {\n    return state.usersPage.isFetchingInProgress\n};\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {\n    follow,\n    unFollow,\n    setCurrentPage, setToggleFollowInProgress, setUsersThunkCreate\n} from \"../../redux/users-Reducer\";\nimport Preloader from \"../general/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getIsFetching, getIsFetchingInProgress,\n    getPageSize,\n    getSetToggleFollowInProgress, getTotalItemsCount,\n    getUsers\n} from \"../../redux/users-Selectors\";\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n\n        this.props.setUsersThunkCreate(this.props.currentPage, this.props.pageSize);\n    }\n\n\n    onChangedPage = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n\n        this.props.setUsersThunkCreate(pageNumber, this.props.pageSize);\n\n    }\n\n    render() {\n\n        // if(!this.props.isAuth) return <Navigate to={\"/login\"} />;\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users\n                totalItemsCount={this.props.totalItemsCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onChangedPage={this.onChangedPage}\n                users={this.props.users}\n                unfollow={this.props.unFollow}\n                follow={this.props.follow}\n                isFetchingInProgress={this.props.isFetchingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => { // зробив селектори\n\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalItemsCount: getTotalItemsCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        setToggleFollowInProgress: getSetToggleFollowInProgress(state),\n        isFetchingInProgress:getIsFetchingInProgress(state),\n    }\n};\n//\n// let mapStateToProps = (state) => {\n//\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         setToggleFollowInProgress: state.usersPage.setToggleFollowInProgress,\n//         isFetchingInProgress:state.usersPage.isFetchingInProgress,\n//     }\n//\n// }\n\n// let AuthRedirectComponent = withAuthRedirect(UsersContainer); // Хок на редирект, коли ти не за логінений тебе не пустить на страницю\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow, unFollow, setCurrentPage, setToggleFollowInProgress, setUsersThunkCreate}),\n)(UsersContainer)\n\n// export default connect(mapStateToProps, {\n//     follow, unFollow, setCurrentPage, setToggleFollowInProgress, setUsersThunkCreate})(AuthRedirectComponent);\n"],"sourceRoot":""}